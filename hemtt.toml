name = "ACRE2"
prefix = "acre"
author = "ACRE2 Team"
files = [
    "*.dll",
    "mod.cpp",
    "README.md",
    "LICENSE",
    "acre_logo_medium_ca.paa",
    "meta.cpp",
    "extras/Wav2B64.exe/",
    "extras/examples/",
    "plugin"
]

modname = "acre2"
key_name = "{{prefix}}_{{version}}"
authority = "{{prefix}}_{{version}}-{{git \"id 8\"}}"

check = [
    "!check_release_os",
    "!version_set",
    "!binarizer_link"
]
prebuild = ["!compile_sqf"]
postbuild = ["!compile_sqf_cleanup"]
releasebuild = [
    "@zip acre2_v{{version}}"
]

[header_exts]
version = "{{git \"id 8\"}}"

[scripts.check_release_os]
steps_linux = [
    'echo -e "\033[0;33m[WARN]\033[0m Linux release builds have broken keys and are not SQFC-optimized! Use only for local testing!"'
]
only_release = true
show_output = true

[scripts.version_set]
steps_linux = [
    "echo Setting version",
    "sed -i -r -s 's/[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+/{{semver.major}}.{{semver.minor}}.{{semver.patch}}.{{semver.build}}/g' README.md",
    "sed -i -r -s 's/[0-9]+\\.[0-9]+\\.[0-9]+/{{semver.major}}.{{semver.minor}}.{{semver.patch}}/g' README.md docs/_data/sidebar.yml",
    "echo -e '#define ACRE_VERSION_MAJOR {{semver.major}}' > extensions/src/ACRE2Shared/version.h",
    "echo -e '#define ACRE_VERSION_MINOR {{semver.minor}}' >> extensions/src/ACRE2Shared/version.h",
    "echo -e '#define ACRE_VERSION_SUBMINOR {{semver.patch}}' >> extensions/src/ACRE2Shared/version.h",
    "echo -e '#define ACRE_VERSION_BUILD {{semver.build}}' >> extensions/src/ACRE2Shared/version.h"
]
steps_windows = [
    "echo Setting version",
    "powershell -Command foreach ($f in 'README.md', 'docs/_data/sidebar.yml') {(Get-Content $f) -replace '[0-9]+\\.[0-9]+\\.[0-9]+', '{{semver.major}}.{{semver.minor}}.{{semver.patch}}' -join \"`n\" ^| Set-Content -NoNewline $f; Add-Content -NoNewline \"`n\" $f}",
    "powershell -Command foreach ($f in 'README.md') {(Get-Content $f) -replace '[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+', '{{semver.major}}.{{semver.minor}}.{{semver.patch}}.{{semver.build}}' -join \"`n\" ^| Set-Content -NoNewline $f; Add-Content -NoNewline \"`n\" $f}",
    "powershell -Command '#define ACRE_VERSION_MAJOR {{semver.major}}' > extensions/src/ACRE2Shared/version.h",
    "powershell -Command '#define ACRE_VERSION_MINOR {{semver.minor}}' >> extensions/src/ACRE2Shared/version.h",
    "powershell -Command '#define ACRE_VERSION_SUBMINOR {{semver.patch}}' >> extensions/src/ACRE2Shared/version.h",
    "powershell -Command '#define ACRE_VERSION_BUILD {{semver.build}}' >> extensions/src/ACRE2Shared/version.h"
]
only_release = true
show_output = true

# SQF Compilation
[scripts.compile_sqf]
steps_windows = [
    "echo Compile SQF",
    "python tools/compile_sqf.py cleanup build"
]
only_release = true
show_output = true

[scripts.compile_sqf_cleanup]
steps_windows = [
    "echo Compile SQF Cleanup",
    "python tools/compile_sqf.py cleanup"
]
only_release = true
show_output = true

# Binarizer file search compatibility
[scripts.binarizer_link]
steps_windows = [
    "if not exist idi\\acre mkdir idi\\acre",
    "if not exist idi\\acre\\addons mklink /j idi\\acre\\addons addons",
    "if not exist a3 mklink /j a3 include\\a3"
]
steps_linux = [
    # Preparation for Windows Binarizer (run once on Linux for network share compatibility)
    "mkdir -p idi/acre",
    "[ -d idi/acre/addons ] || ln -sr addons idi/acre/",
    "mkdir -p a3",
    "[ -d a3 ] || ln -sr include/a3 a3/"
]
show_output = true
